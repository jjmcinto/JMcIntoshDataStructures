August 7, 2020
Everything works and the code has been re-factored. This project is done!

August 6, 2020
Today, I confirmed:
	(by sorting) that DS1.py has the correct output for 5.in
	both DS1.py and DS5.py found expendable crew members, so they return coverage by all
5.in and 6.in solved! When the currShift is contained by an all-(-1) segment, segments should not change (but they were changing).
9.in pending


August 4, 2020
Solve this:
vdo@vdo-desktop:/data/Jeffrey/CMU/Orientation/JMcIntoshDataStructures$ python DS5.py
('1:', 7)
('2:', 3954114)
('3:', 40284653)
('4:', 41030168)
('5:', 2999776716)
('6:', 72521582)
('7:', 37460109)
('8:', 52460443)
('9:', 10814198528)
('10:', 74901843)

vdo@vdo-desktop:/data/Jeffrey/CMU/Orientation/JMcIntoshDataStructures$ python DS1.py
('1:', 7)
('2:', 3954114)
('3:', 40284653)
('4:', 41030168)
('5:', 999999998)
('6:', 99996695)
('7:', 37460109)
('8:', 52460443)
('9:', 63613204)
('10:', 74901843)


All were produced by code version DS1.py, which ran slowly but got there in the end.
1st to 4th outputs were generated by a MacOS machine.
5th to 10th outputs were generated by a Ubuntu machine.
I intend to continue developing DS5.py, which should be faster (although that is what I said about versions 2-4, which crash on "out of memory" for most inputs)
